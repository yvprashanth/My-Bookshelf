{"version":3,"sources":["BooksAPI.js","ShelfChanger.js","Book.js","Bookshelf.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","ShelfChanger","_this$props","this","props","book","updateShelf","shelf","react_default","a","createElement","className","value","onChange","e","disabled","React","Component","Book","style","width","height","backgroundImage","concat","bookDetails","imageLinks","thumbnail","src_ShelfChanger","title","authors","Bookshelf","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this","selfbooks","filter","item","map","key","id","src_Book","Search","Link","to","type","placeholder","autofocus","BooksApp","state","books","showSearchPage","bind","assertThisInitialized","target","index","_","findIndex","num","splice","setState","toConsumableArray","_this2","fetch","then","res","json","data","_this3","Route","path","exact","render","src_Bookshelf","component","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"sQACMA,SAAM,yCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GCSJS,0LAhBH,IAAAC,EACiCC,KAAKC,MAAlCC,EADJH,EACIG,KAAMC,EADVJ,EACUI,YAAaC,EADvBL,EACuBK,MAC3B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQE,MAAOL,EAAOM,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAGT,KAClDG,EAAAC,EAAAC,cAAA,UAAQE,MAAM,OAAOG,UAAQ,GAA7B,cACAP,EAAAC,EAAAC,cAAA,UAAQE,MAAM,oBAAd,qBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,cAAd,gBACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,QACAJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,QAAd,iBAVOI,IAAMC,YCiBlBC,mLAdP,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaQ,MAAO,CAACC,MAAM,IAAKC,OAAO,IAAKC,gBAAe,OAAAC,OAASpB,KAAKC,MAAMoB,YAAYC,WAAWC,UAA3C,OACvElB,EAAAC,EAAAC,cAACiB,EAAD,CAActB,KAAMF,KAAKC,MAAMoB,YAAalB,YAAaH,KAAKC,MAAME,YAAaC,MAAOJ,KAAKC,MAAMoB,YAAYjB,UAGtHC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcR,KAAKC,MAAMoB,YAAYI,OACpDpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBR,KAAKC,MAAMoB,YAAYK,QAAQ,YAV3Db,IAAMC,WCiDVa,cAhDX,SAAAA,EAAY1B,GAAO,OAAA2B,OAAAC,EAAA,EAAAD,CAAA5B,KAAA2B,GAAAC,OAAAE,EAAA,EAAAF,CAAA5B,KAAA4B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhC,KACTC,0EAGF,IAAAgC,EAAAjC,KACJ,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTR,KAAKC,MAAMiC,UAAUC,OAAO,SAAAC,GAAI,MAAmB,qBAAfA,EAAKhC,QAA8BiC,IAAI,SAACnC,GACzE,OACAG,EAAAC,EAAAC,cAAA,MAAI+B,IAAKpC,EAAKqC,IACVlC,EAAAC,EAAAC,cAACiC,EAAD,CAAMnB,YAAanB,EAAMC,YAAa8B,EAAKhC,MAAME,mBAMjEE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTR,KAAKC,MAAMiC,UAAUC,OAAO,SAAAC,GAAI,MAAmB,eAAfA,EAAKhC,QAAwBiC,IAAI,SAACnC,GACnE,OACAG,EAAAC,EAAAC,cAAA,MAAI+B,IAAKpC,EAAKqC,IACVlC,EAAAC,EAAAC,cAACiC,EAAD,CAAMnB,YAAanB,EAAMC,YAAa8B,EAAKhC,MAAME,mBAMjEE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTR,KAAKC,MAAMiC,UAAUC,OAAO,SAAAC,GAAI,MAAmB,SAAfA,EAAKhC,QAAkBiC,IAAI,SAACnC,GAC7D,OACAG,EAAAC,EAAAC,cAAA,MAAI+B,IAAKpC,EAAKqC,IACVlC,EAAAC,EAAAC,cAACiC,EAAD,CAAMnB,YAAanB,EAAMC,YAAa8B,EAAKhC,MAAME,2BAtCzDU,IAAMC,oCCoBf2B,mLAnBP,OACIpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,GAAG,KACPtC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAlB,UAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEbH,EAAAC,EAAAC,cAAA,SAAOqC,KAAK,OAAOC,YAAY,4BAA4BC,UAAU,gBAGzEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAdPK,IAAMC,mBCoEZiC,cA7Db,SAAAA,EAAY9C,GAAM,IAAAgC,EAAA,OAAAL,OAAAC,EAAA,EAAAD,CAAA5B,KAAA+C,IAChBd,EAAAL,OAAAE,EAAA,EAAAF,CAAA5B,KAAA4B,OAAAG,EAAA,EAAAH,CAAAmB,GAAAf,KAAAhC,KAAMC,KAIR+C,MAAQ,CAONC,MAAM,GACNC,gBAAgB,GAXhBjB,EAAK9B,YAAc8B,EAAK9B,YAAYgD,KAAjBvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAAK,KAFHA,2EAgBNtB,EAAGT,GACbA,EAAKE,MAAQO,EAAE0C,OAAO5C,MACtB,IAAI6C,EAAQC,IAAEC,UAAUxD,KAAKgD,MAAMC,MAAO,SAASQ,GACjD,OAAOA,EAAIlB,KAAOrC,EAAKqC,KAErBe,GAAS,GACXtD,KAAKgD,MAAMC,MAAMS,OAAOJ,EAAM,GAEhCtD,KAAK2D,SAAS,CACZV,MAAK,GAAA7B,OAAAQ,OAAAgC,EAAA,EAAAhC,CAAM5B,KAAKgD,MAAMC,OAAjB,CAAwB/C,kDAId,IAAA2D,EAAA7D,KLnBnB8D,MAAK,GAAA1C,OAAIhC,EAAJ,UAAiB,CAAEO,YACrBoE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKjB,QKkBDc,KAAK,SAACd,GACtBY,EAAKF,SAAS,CAACV,6CAIV,IAAAkB,EAAAnE,KACP,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAC1BlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,kCAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiE,EAAD,CAAWtC,UAAWiC,EAAKnB,MAAMC,MAAO9C,YAAagE,EAAKhE,gBAGhEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAMC,GAAG,WACPtC,EAAAC,EAAAC,cAAA,kCAKVF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,KAAK,UAAUI,UAAWhC,YAxDpB5B,IAAMC,2BCH7B4D,IAASH,OAAOlE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACItE,EAAAC,EAAAC,cAACqE,EAAD,OACcC,SAASC,eAAe","file":"static/js/main.d406a663.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\nimport './App.css'\n\nclass ShelfChanger extends React.Component {\n    render(){\n        const { book, updateShelf, shelf } = this.props \n        return (\n            <div className=\"book-shelf-changer\">\n                <select value={shelf} onChange={(e) => updateShelf(e, book)}>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"currentlyReading\">Currently Reading</option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default ShelfChanger","import React from 'react'\nimport './App.css'\nimport ShelfChanger from './ShelfChanger'\n\nclass Book extends React.Component {\n    render(){\n        return (\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div className=\"book-cover\" style={{width:128, height:193, backgroundImage: `url(${this.props.bookDetails.imageLinks.thumbnail})`}}>\n                       <ShelfChanger book={this.props.bookDetails} updateShelf={this.props.updateShelf} shelf={this.props.bookDetails.shelf}/>\n                    </div>\n                </div>\n                <div className=\"book-title\">{this.props.bookDetails.title}</div>\n                <div className=\"book-authors\">{this.props.bookDetails.authors[0]}</div>\n            </div>\n        )\n    }\n}\n\nexport default Book","import React from 'react'\nimport './App.css'\nimport Book from './Book'\n\nclass Bookshelf extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {this.props.selfbooks.filter(item => item.shelf === \"currentlyReading\").map((book) => {\n                            return (\n                            <li key={book.id}>\n                                <Book bookDetails={book} updateShelf={this.props.updateShelf} />\n                            </li>\n                            )\n                        })}\n                    </ol>\n                </div>\n                <h2 className=\"bookshelf-title\">Want To Read</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {this.props.selfbooks.filter(item => item.shelf === \"wantToRead\").map((book) => {\n                            return (\n                            <li key={book.id}>\n                                <Book bookDetails={book} updateShelf={this.props.updateShelf} />\n                            </li>\n                            )\n                        })}\n                    </ol>\n                </div>\n                <h2 className=\"bookshelf-title\">Read</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {this.props.selfbooks.filter(item => item.shelf === \"read\").map((book) => {\n                            return (\n                            <li key={book.id}>\n                                <Book bookDetails={book} updateShelf={this.props.updateShelf} />\n                            </li>\n                            )\n                        })}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Bookshelf","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Search extends React.Component {\n    render(){\n        return(\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n                <Link to=\"/\">\n                  <button className=\"close-search\">Close</button>\n                </Link>\n              <div className=\"search-books-input-wrapper\">\n                {}\n                <input type=\"text\" placeholder=\"Search by title or author\" autofocus=\"autofocus\"/>\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Search","import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Bookshelf from './Bookshelf'\nimport _ from 'lodash';\nimport Search from './Search'\nimport { Link } from 'react-router-dom'\nimport { Route } from 'react-router-dom'\n\nclass BooksApp extends React.Component {\n  constructor(props){\n    super(props);\n    this.updateShelf = this.updateShelf.bind(this);\n  }\n\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    books:[],\n    showSearchPage: false\n  }\n\n  updateShelf(e, book) {\n    book.shelf = e.target.value;\n    var index = _.findIndex(this.state.books, function(num) {\n      return num.id === book.id\n    });\n    if (index > -1) {\n      this.state.books.splice(index,1);\n    }\n    this.setState({\n      books: [...this.state.books, book]\n    })\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll().then((books) => {\n      this.setState({books});\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">    \n          <Route path=\"/\" exact render={()=> (\n              <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                  <h1>Prashanth Bookreads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                  <div>\n                      <Bookshelf selfbooks={this.state.books} updateShelf={this.updateShelf}/> \n                  </div>\n                </div>\n                <div className=\"open-search\">\n                  <Link to=\"/search\">\n                    <button>Add a book</button>\n                  </Link>\n                </div>\n              </div>\n          )}/>\n          <Route path=\"/search\" component={Search} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter>\n                    <App />\n                </BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}